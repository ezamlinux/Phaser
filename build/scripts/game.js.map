{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src\\index.js",
    "src\\objects\\Barrel.js",
    "src\\objects\\Bottle.js",
    "src\\objects\\BottleCrate.js",
    "src\\objects\\Coin.js",
    "src\\objects\\CoinCrate.js",
    "src\\objects\\Crate.js",
    "src\\objects\\Player.js",
    "src\\objects\\RegularCrate.js",
    "src\\states\\EndlessRunner.js",
    "src\\states\\Menu.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Menu from 'states/Menu';\r\nimport EndlessRunner from 'states/EndlessRunner';\r\n\r\nclass Game extends Phaser.Game {\r\n\tconstructor() {\r\n\t\tsuper(800, 600, Phaser.AUTO, 'content', null);\r\n\t\tthis.GLOBAL = {};\r\n\t\tthis.state.add('menu', Menu, false);\r\n\t\tthis.state.add('endlessRunner', EndlessRunner, false);\r\n\t\tthis.state.start('menu');\r\n\t}\r\n}\r\n\r\nnew Game();\r\n",
    "class Barrel extends Phaser.Sprite{\r\n    constructor(game, x, y, img){\r\n        super(game, x, y, img);\r\n\r\n        this.game.physics.arcade.enable(this);\r\n        this.body.bounce.set(Math.random());\r\n        this.body.gravity.y = 200;\r\n        this.anchor.setTo(.5);\r\n        this.body.velocity.x = -200;\r\n        this.checkWorldBounds = true;\r\n        this.outOfBoundsKill = true;\r\n        this.body.onCollide = new Phaser.Signal();\r\n        this.body.onCollide.add(this.onHit, this);\r\n        this.game.GLOBAL.barrels.add(this);\r\n    }\r\n\r\n    onHit(_barrel, _player){\r\n        if(_player && _player.key == 'samourai'){ \r\n            if(_player.body.touching.down && _barrel.body.touching.up){\r\n            }else {\r\n                _player.getDamage(1);\r\n                _barrel.kill();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Barrel;",
    "class Bottle extends Phaser.Sprite{\r\n    constructor(game, x, y, index){\r\n        super(game, x, y, 'flasks');\r\n        this.game.physics.arcade.enable(this);\r\n        this.frame = index; \r\n        this.body.velocity.x = -200;\r\n        this.body.gravity.y = 1000;\r\n        this.body.bounce.setTo(.5);\r\n        this.checkWorldBounds = true;\r\n        this.outOfBoundsKill = true;\r\n\r\n        this.game.GLOBAL.bottles.add(this);\r\n    }\r\n\r\n    onHit(){\r\n        this.kill();\r\n    }\r\n}\r\n\r\nexport default Bottle;",
    "import Crate from './Crate';\r\nimport Bottle from './Bottle';\r\n\r\nclass BottleCrate extends Crate{\r\n    constructor(game, x, y){\r\n        let group = game.GLOBAL.bottleCrates;\r\n        super(game, x, y, group, 1);\r\n\r\n        this.body.onCollide = new Phaser.Signal();\r\n        this.body.onCollide.add(this.onHit, this);\r\n    }\r\n\r\n    onHit(_crate, _player){\r\n        if(_player.key == 'samourai'){  \r\n            if(_player.body.touching.down && _crate.body.touching.up){\r\n            }\r\n            else{\r\n                let rand = Math.floor(Math.random() * 4) + 1;\r\n            \r\n                if(rand == 1){\r\n                    new Bottle(this.game, _crate.x, _crate.y, 0);\r\n                } else if(rand == 2){\r\n                    new Bottle(this.game, _crate.x, _crate.y, 2);\r\n                } else if(rand == 3){\r\n                    new Bottle(this.game, _crate.x, _crate.y, 1);\r\n                } else {\r\n                    new Bottle(this.game, _crate.x, _crate.y, 3);\r\n                }\r\n                _crate.kill(_crate, _player)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default BottleCrate;",
    "let group;\r\n\r\nclass Coin extends Phaser.Sprite{\r\n    constructor(game, x, y){\r\n        super(game, x, y, 'ring');\r\n        this.game.physics.arcade.enable(this);\r\n        this.coinSound = this.game.add.audio('coin');\r\n        this.coinSound.play();\r\n        this.body.velocity.x = -200;\r\n        this.body.gravity.y = 1000;\r\n        this.body.bounce.setTo(.5);\r\n        this.checkWorldBounds = true;\r\n        this.outOfBoundsKill = true;\r\n\r\n        this.game.GLOBAL.coins.add(this);\r\n    }\r\n\r\n    onHit(){\r\n        this.coinSound.play();   \r\n        this.kill();\r\n    }\r\n}\r\n\r\nexport default Coin;",
    "import Crate from 'objects/Crate';\r\nimport Coin from 'objects/Coin';\r\n\r\nclass CoinCrate extends Crate{\r\n    constructor(game, x, y){\r\n        let group = game.GLOBAL.coinCrates;\r\n        super(game, x, y, group, 2);\r\n\r\n        this.body.onCollide = new Phaser.Signal();\r\n        this.body.onCollide.add(this.onHit, this);\r\n    }\r\n\r\n    onHit(_crate, _player){\r\n        if(_player.key == 'samourai'){\r\n            if(_player.body.touching.down && _crate.body.touching.up){\r\n            }\r\n            else {\r\n                let rand =  Math.floor(Math.random() * 5) + 1;\r\n                for(let i = 0; i < rand; i++){\r\n                    new Coin(this.game, _crate.x  + 80 + (20 * i), _crate.y);\r\n                }   \r\n               super.onHit(_crate, _player);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default CoinCrate",
    "class Crate extends Phaser.Sprite{\r\n    constructor(game, x, y, group, _frame){\r\n        super(game, x, y, 'crates');\r\n\r\n        this.game.physics.arcade.enable(this);\r\n        this.frame = _frame;\r\n        this.body.velocity.x = -200;\r\n        this.checkWorldBounds = true;\r\n        this.outOfBoundsKill = true;\r\n        this.body.onCollide = new Phaser.Signal();\r\n        this.body.onCollide.add(this.onHit, this);\r\n        group.add(this);\r\n    }\r\n\r\n    onHit(_crate, _player){\r\n        if(_player && _player.key == 'samourai'){ \r\n            if(_player.body.touching.down && _crate.body.touching.up){\r\n            }else {\r\n                _crate.kill();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Crate;",
    "import Coin from './Coin';\r\n\r\nclass Player extends Phaser.Sprite {\r\n\tconstructor(game){\r\n        super(game, 32, game.world.height - 200, 'samourai');   \r\n\r\n        this.game.physics.arcade.enable(this);      \r\n        this.jumpSound = this.game.add.audio('jump');\r\n        this.maxLife = 3;\r\n        this.life = this.maxLife;\r\n        this.bottleStock = {\r\n            blue : 0,\r\n            green : 0,\r\n            yellow : 0,\r\n            red : 0,\r\n            max : 3\r\n        };\r\n        this.inputEnabled = true;\r\n        this.scale.setTo(0.2);\r\n        this.body.setSize(330, 465, 250, 40);\r\n        this.body.collideWorldBounds = true;\r\n        this.body.gravity.y = 1200;\r\n\r\n        // -- Animation -- //\r\n        this.animations.add('run', Phaser.Animation.generateFrameNames('Run_', 0, 7, '', 3), 30, false);\r\n        this.animations.add('forward', Phaser.Animation.generateFrameNames('Run_', 0, 7, '', 3).reverse(), 30, false);\r\n        this.animations.add('jump', ['JumpUP'], 15, false);\r\n        this.animations.add('fall', ['FallDown'], 15, false);\r\n        this.game.world.addChild(this);\r\n    }\r\n\r\n    jump(){\r\n        if(this.body.blocked.down || this.body.touching.down){    \r\n            this.jumpSound.play();\r\n            this.animations.play('jump');     \r\n            this.body.velocity.y = -500; \r\n        }\r\n    }\r\n\r\n    getDamage(_x){\r\n        this.life -= _x;\r\n        if(this.life == 0){\r\n            // infinite credits\r\n            this.game.GLOBAL.themeMusic.stop();\r\n            this.game.state.start('menu');\r\n        }\r\n    }\r\n\r\n    useBottle(_bottle) {\r\n        if(_bottle.keyCode == 49){\r\n            if(this.player.bottleStock.green == this.player.bottleStock.max && this.player.life < this.player.maxLife){\r\n                this.player.life += 1 ;\r\n                this.player.bottleStock.green = 0;\r\n            }\r\n        }\r\n\r\n        else if(_bottle.keyCode == 50){\r\n            if (this.player.bottleStock.red == this.player.bottleStock.max && this.player.life < this.player.maxLife ){\r\n                this.player.life = this.player.maxLife;\r\n                this.player.bottleStock.red = 0;\r\n            }\r\n        }\r\n\r\n        else if(_bottle.keyCode == 51){\r\n            if(this.player.bottleStock.yellow == this.player.bottleStock.max){            \r\n                this.player.maxLife += 1;\r\n                this.arrayLife[this.arrayLife.length] = this.game.add.sprite(16 + ( this.arrayLife.length * 24 ), 16, 'lifeBar');\r\n                this.player.life = this.player.maxLife;\r\n                this.player.bottleStock.yellow = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    hitBottle(_player, _bottle){\r\n        console.log(_bottle.frame);\r\n        switch(_bottle.frame){\r\n            case 0:\r\n                if( _player.bottleStock.blue <  _player.bottleStock.max) {  \r\n                    _player.bottleStock.blue += 1;\r\n                    if( _player.bottleStock.blue ==  _player.bottleStock.max) {\r\n                        this.scoreMultiplicateur += 1;\r\n                        _player.bottleStock.blue = 0;\r\n                    }\r\n                } \r\n                break;\r\n            case 1:\r\n                if(_player.bottleStock.green < _player.bottleStock.max){  \r\n                    _player.bottleStock.green += 1;\r\n                }\r\n                break;\r\n            case 2:\r\n                if(_player.bottleStock.red <  _player.bottleStock.max){  \r\n                    _player.bottleStock.red += 1;\r\n                }\r\n                break;\r\n            case 3:\r\n                if( _player.bottleStock.yellow <  _player.bottleStock.max){  \r\n                    _player.bottleStock.yellow += 1;\r\n                }\r\n                break;\r\n\r\n        }\r\n        _bottle.onHit();\r\n    }\r\n\r\n    hitCoin(_player, _coin){\r\n        _coin.onHit();\r\n        this.score += (1 * this.scoreMultiplicateur);\r\n    }\r\n}\r\n\r\nexport default Player;",
    "import Crate from 'objects/Crate'\r\n\r\nclass RegularCrate extends Crate{\r\n    constructor(game, x, y){\r\n        let group = game.GLOBAL.crates;\r\n        super(game, x, y, group, 0);\r\n        this.body.onCollide = new Phaser.Signal();\r\n        this.body.onCollide.add(this.onHit, this);\r\n    }\r\n\r\n    onHit(_crate, _player){\r\n        if(_player.key == 'samourai'){\r\n            if(_player.body.touching.down && _crate.body.touching.up){\r\n            }\r\n            else {\r\n                _player.getDamage(1);\r\n            }   \r\n            super.onHit(_crate, _player);\r\n        }\r\n    }\r\n}\r\n\r\nexport default RegularCrate;",
    "import Player from 'objects/Player';\r\nimport RegularCrate from 'objects/RegularCrate';\r\nimport BottleCrate from 'objects/BottleCrate';\r\nimport CoinCrate from 'objects/CoinCrate';\r\nimport Barrel from 'objects/Barrel';\r\n\r\nclass EndlessRunner extends Phaser.State {\r\n\tpreload() { \r\n\t\tthis.game.load.path = 'assets/';\r\n        this.game.load.atlas('samourai', 'img/player.png', 'data/player.json');\r\n\r\n        this.game.load.image('sky', 'img/sky.png');\r\n        this.game.load.image('mountain', 'img/mountain.png');\r\n        this.game.load.image('rolling_barrel', 'img/rolling_barrel.png');\r\n        this.game.load.spritesheet('flasks', 'img/Flasks.png', 24, 24);\r\n        this.game.load.spritesheet('crates', 'img/crates.png', 64, 64);\r\n        this.game.load.image('ring', 'img/ring.png');\r\n        this.game.load.image('grass', 'img/grass.png');\r\n        this.game.load.spritesheet('lifeBar', 'img/lifeBar.png', 16, 32);\r\n        this.game.load.spritesheet('green_jar', 'img/green_jar.png', 32, 32);\r\n        this.game.load.spritesheet('red_jar', 'img/red_jar.png', 32, 32);\r\n        this.game.load.spritesheet('yellow_jar', 'img/yellow_jar.png', 32, 32);\r\n        this.game.load.spritesheet('blue_jar', 'img/blue_jar.png', 32, 32);\r\n        this.game.load.audio('taiko', 'audio/taiko-drums.ogg');\r\n        this.game.load.audio('jump', 'audio/jump.wav');\r\n        this.game.load.audio('coin', 'audio/coin.wav');\r\n    }\r\n\r\n    create() {\r\n        // ---- global params ---- //\r\n        this.score = 0;\r\n        this.scoreMultiplicateur = 1;\r\n        \r\n        // ---- ----//\r\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n        this.cursors = this.game.input.keyboard.createCursorKeys();\r\n\r\n        this.game.GLOBAL.themeMusic = this.game.add.audio('taiko');\r\n        this.game.GLOBAL.themeMusic.loop = true;\r\n        this.game.GLOBAL.themeMusic.play();\r\n\r\n        this.game.stage.backgroundColor =\"#000000\";\r\n        this.bg_sky = this.game.add.tileSprite(0, 0, this.game.world.width, this.game.world.height, 'sky');\r\n        this.bg_mountain= this.game.add.tileSprite(0, 0, this.game.world.width, this.game.world.height, 'mountain')\r\n        this.floors = this.game.add.tileSprite(0, this.game.world.height - 64, this.game.world.width, 64, 'grass');\r\n        this.game.physics.arcade.enable(this.floors);\r\n        this.floors.enableBody = true;\r\n        this.floors.body.immovable = true;\r\n\r\n        this.scoreText = this.game.add.text(this.game.world.width / 2, 16, '', { fontSize: '32px', fill: '#000' });\r\n        this.scoreText.anchor.setTo(.5, 0);\r\n        this.blue_jar = this.game.add.sprite(this.game.world.width - 192, 16, 'blue_jar');\r\n        this.green_jar = this.game.add.sprite(this.game.world.width - 144, 16, 'green_jar');     \r\n        this.red_jar = this.game.add.sprite(this.game.world.width - 96, 16, 'red_jar');\r\n        this.yellow_jar = this.game.add.sprite(this.game.world.width - 48, 16, 'yellow_jar');\r\n\r\n        // -- GROUPS -- \r\n        // -- crates \r\n        this.game.GLOBAL.crates = this.game.add.group();\r\n        this.game.GLOBAL.coinCrates = this.game.add.group();\r\n        this.game.GLOBAL.bottleCrates = this.game.add.group();\r\n\r\n        // -- barrels\r\n        this.game.GLOBAL.barrels = this.game.add.group();\r\n        this.game.GLOBAL.barrels.enableBody = true;\r\n\r\n        // -- coins\r\n        this.game.GLOBAL.coins = this.game.add.group();\r\n\r\n        // -- bottles\r\n        this.game.GLOBAL.bottles = this.game.add.group();\r\n\r\n        // -- function -- //\r\n        this.player = new Player(this.game);\r\n        this.arrayLife = [];\r\n\r\n        for (let i = 0; i < this.player.maxLife; i++){\r\n            this.arrayLife[i] = this.game.add.sprite(16 + ( i * 24 ), 16, 'lifeBar');\r\n        }\r\n        // ---- EVENTS ---- //\r\n        var spaceKey = this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\r\n        spaceKey.onDown.add(this.player.jump, this.player);\r\n        var key4 = this.game.input.keyboard.addKey(Phaser.Keyboard.UP);\r\n        key4.onDown.add(this.player.jump, this.player);\r\n\r\n        var key1 = this.game.input.keyboard.addKey(Phaser.Keyboard.ONE);\r\n        key1.onDown.add(this.player.useBottle, this);\r\n    \r\n        var key2 = this.game.input.keyboard.addKey(Phaser.Keyboard.TWO);\r\n        key2.onDown.add(this.player.useBottle, this);\r\n    \r\n        var key3 = this.game.input.keyboard.addKey(Phaser.Keyboard.THREE);\r\n        key3.onDown.add(this.player.useBottle, this);\r\n\r\n        this.timer = this.game.time.events.loop(1750, this.generateObstacle, this);\r\n     }\r\n\r\n    update(){\r\n        // -- floor collide\r\n        this.game.physics.arcade.collide(this.floors, this.player);\r\n        this.game.physics.arcade.collide(this.floors, this.game.GLOBAL.coins);\r\n        this.game.physics.arcade.collide(this.floors, this.game.GLOBAL.bottles);\r\n        this.game.physics.arcade.collide(this.floors, this.game.GLOBAL.crates);\r\n        this.game.physics.arcade.collide(this.floors, this.game.GLOBAL.coinCrates);\r\n        this.game.physics.arcade.collide(this.floors, this.game.GLOBAL.bottleCrates);\r\n        this.game.physics.arcade.collide(this.floors, this.game.GLOBAL.barrels);\r\n\r\n        // -- barrels collide\r\n        this.game.physics.arcade.collide(this.game.GLOBAL.barrels, this.game.GLOBAL.crates, this.breakBoth, null, this);\r\n        this.game.physics.arcade.collide(this.game.GLOBAL.barrels, this.game.GLOBAL.coinCrates, this.breakBoth, null, this);\r\n        this.game.physics.arcade.collide(this.game.GLOBAL.barrels, this.game.GLOBAL.bottleCrates, this.breakBoth, null, this);\r\n        this.game.physics.arcade.collide(this.game.GLOBAL.barrels, this.game.GLOBAL.barrels, this.breakBoth, null, this);\r\n\r\n        // -- player collide\r\n        this.game.physics.arcade.collide(this.game.GLOBAL.crates, this.player, this.game.GLOBAL.crates.onHit, null, this);\r\n        this.game.physics.arcade.collide(this.game.GLOBAL.bottleCrates, this.player, this.game.GLOBAL.bottleCrates.onHit, null, this);\r\n        this.game.physics.arcade.collide(this.game.GLOBAL.coinCrates, this.player, this.game.GLOBAL.coinCrates.onHit, null, this);      \r\n        this.game.physics.arcade.collide(this.player, this.game.GLOBAL.barrels, this.game.GLOBAL.barrels.onHit, null, this);\r\n        this.game.physics.arcade.overlap(this.player, this.game.GLOBAL.coins, this.player.hitCoin, null, this);\r\n        this.game.physics.arcade.overlap(this.player, this.game.GLOBAL.bottles, this.player.hitBottle, null, this);\r\n\r\n        // -- animation\r\n        this.bg_sky.tilePosition.x -= 0.20;\r\n        this.bg_mountain.tilePosition.x -= 1;\r\n        this.floors.tilePosition.x -= 2.5;\r\n        this.game.GLOBAL.barrels.forEach(item => item.angle -= 2 );\r\n\r\n        this.updateInfo();\r\n        // -- player event\r\n        if(this.cursors.right.isDown){\r\n\t\t\tif (this.player.body.touching.down) {\r\n                this.player.animations.play('run');\r\n                this.player.body.velocity.x = 200;\r\n            }\r\n\t\t\telse {\r\n                this.player.body.velocity.x = 150;\r\n            }\r\n        }\r\n        else if (this.cursors.left.isDown){\r\n\t\t\tif (this.player.body.touching.down){\r\n                this.player.animations.play('forward');\r\n                this.player.body.velocity.x = -150;\r\n            } \r\n\t\t\telse{\r\n                this.player.body.velocity.x = -120; \r\n            } \r\n        }\r\n        else {\r\n            if (this.player.body.touching.down){            \r\n                this.player.animations.play('run');\r\n                this.player.body.velocity.x = 0;\r\n            }\r\n        }\r\n    }\r\n    \r\n    // ------------------ //\r\n    // ---- Function ---- //\r\n    // ------------------ //\r\n\r\n    // -- generator & miscellanous\r\n\r\n    createFloor(){\r\n        let obj;\r\n        for(let i = 0; i < this.game.world.width; i += 64){  \r\n            obj = this.floors.create(i, this.game.world.height - 64, 'grass');\r\n        }\r\n    }\r\n\r\n    updateInfo(){\r\n        this.scoreText.text = this.score;\r\n        for(let i = 0; i < this.arrayLife.length; i++){\r\n            this.arrayLife[i].frame = i + 1 <= this.player.life ? 0 : 1;\r\n        }\r\n        this.green_jar.frame = this.player.bottleStock.green\r\n        this.red_jar.frame = this.player.bottleStock.red\r\n        this.blue_jar.frame = this.player.bottleStock.blue\r\n        this.yellow_jar.frame = this.player.bottleStock.yellow\r\n    }\r\n\r\n    generateObstacle(){\r\n        let seed = Math.floor(Math.random() * 10) +1;\r\n        if( seed < 8){\r\n            this.addCrate();\r\n        }\r\n        else if(seed >= 8 && seed != 10 ){\r\n            this.addBarrels();\r\n        }\r\n    }\r\n\r\n    // -- adding\r\n\r\n    addBarrels(){\r\n        let posY = this.game.height - 128;\r\n        let rand = Math.floor(Math.random() * 128) + 1;\r\n        new Barrel(this.game, this.game.width, posY - rand, 'rolling_barrel')\r\n    }\r\n\r\n    addCrate(){\r\n        let rand = Math.floor(Math.random() * 10) + 1;\r\n        let posY = this.game.height - 128;  \r\n        let value = Math.floor(Math.random() * 10) + 1 > 5 ? 96 : 0\r\n        if(rand >= 9){\r\n            let rand = Math.floor(Math.random() * 10) + 1\r\n            if(rand >= 5){\r\n                new CoinCrate(this.game, this.game.width, posY - value); \r\n            }\r\n            else {\r\n                new BottleCrate(this.game, this.game.width, posY - value);    \r\n            }\r\n        } else {\r\n                new RegularCrate(this.game, this.game.width, posY);\r\n        }\r\n    }\r\n\r\n    // -- HITTER\r\n    breakBoth(_one, _two){\r\n        _one.kill();\r\n        _two.kill();\r\n    }\r\n}\r\n\r\nexport default EndlessRunner;\r\n",
    "\r\nclass Menu extends Phaser.State{\r\n    preload(){\r\n        this.game.load.path = 'assets/';\r\n        this.game.load.image('sky', 'img/sky.png');\r\n        this.game.load.image('mountain', 'img/mountain.png');\r\n        this.game.load.image('runnerButton', 'img/menu/runnerButton.png');\r\n        this.game.load.audio('rain', 'audio/rain.wav');\r\n    }\r\n\r\n    create(){\r\n        this.bg_sky = this.game.add.tileSprite(0, 0, this.game.world.width, this.game.world.height, 'sky');\r\n        this.bg_mountain= this.game.add.tileSprite(0, 0, this.game.world.width, this.game.world.height, 'mountain')\r\n\r\n        var button = this.game.add.button(this.game.world.centerX, this.game.world.centerY, 'runnerButton', this.launchEndlessRunner, this);\r\n        button.anchor.setTo(.5);\r\n\r\n        var rKey = this.game.input.keyboard.addKey(Phaser.Keyboard.R);\r\n        rKey.onDown.addOnce(this.launchEndlessRunner, this);\r\n\r\n\r\n        this.game.GLOBAL.themeMusic = this.game.add.audio('rain');\r\n        this.game.GLOBAL.themeMusic.loop = true;\r\n        this.game.GLOBAL.themeMusic.volume = 0.2;\r\n        this.game.GLOBAL.themeMusic.play();\r\n    }\r\n\r\n    update(){\r\n        this.bg_sky.tilePosition.x -= 0.20;\r\n        this.bg_mountain.tilePosition.x -= 1;\r\n    }\r\n    \r\n    launchEndlessRunner(){\r\n        this.game.GLOBAL.themeMusic.stop();\r\n\t\tthis.game.state.start('endlessRunner');\r\n    }\r\n}\r\n\r\nexport default Menu;"
  ]
}